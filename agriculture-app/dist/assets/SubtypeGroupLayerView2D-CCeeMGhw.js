import{v as a,x as n,y as d,P as u,b2 as l}from"./index-DpSbBTRQ.js";import{r as g}from"./FeatureLayerView2D-Z1bndDWt.js";import"./Container-DBN0yhdF.js";import"./featureConversionUtils-BVY7bnBI.js";import"./FeatureEffect-epgJVjRG.js";import"./timeSupport-x_NjGTVn.js";import"./LayerView-C23LbZvJ.js";import"./layerViewUtils-BpLaiWck.js";import"./TechniqueInstance-CW2qqit0.js";import"./UpdateTracking2D-XgJMFWZK.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-4pErXa1Q.js";import"./enums-CmIX1y88.js";import"./utils-jpm0y1F_.js";import"./Rect-CUzevAry.js";import"./LabelMetric-DDH24Oj7.js";import"./Program-DNMwUvrV.js";import"./BufferObject-CchjtTJj.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DkHbCo8y.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-BxfCaZvU.js";import"./vec42-Jag3PU8X.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-B1Sa_M7W.js";import"./WGLContainer-HighlpZU.js";import"./VertexArrayObject-iHGQPihH.js";import"./ProgramTemplate-B0Vottn_.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BnxoM6ui.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-DGQ4ZRax.js";import"./labelingInfo-C_Cutkje.js";import"./labelUtils-DCk0Wd03.js";import"./jsonUtils-jOqZ1fqY.js";import"./heatmapUtils-cGsQqVCw.js";import"./SDFHelper-B9Bx0h2m.js";import"./floatRGBA-TxGx0GnO.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-C_Nrea75.js";import"./RefreshableLayerView-B1FytN1D.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
