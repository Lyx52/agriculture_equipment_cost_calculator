import{v as s,w as i,x as h,bJ as d,eq as n,cZ as f,gv as g,eT as S,eU as y,$ as w,gw as R}from"./index-D7nePuNx.js";let e=class extends d{constructor(o){super(o),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const o=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:f(t),geometries:o}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([h("esri.rest.support.ProjectParameters")],e);const v=e,J=g(v);async function j(o,t,r){t=J(t);const a=S(o),p={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,c=f(t.geometries[0]),u=y(p,r);return w(a.path+"/project",u).then(({data:{geometries:l}})=>R(l,c,m))}export{j as n,v as p};
