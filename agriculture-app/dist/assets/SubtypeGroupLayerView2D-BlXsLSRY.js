import{v as a,x as n,y as d,P as u,bd as l}from"./index-B-REeYpH.js";import{r as g}from"./FeatureLayerView2D-D6L-_G9g.js";import"./Container-BNxmQ9rA.js";import"./featureConversionUtils-DTWAhA8f.js";import"./FeatureEffect-Xg0AbaIM.js";import"./timeSupport-DX5hPhJx.js";import"./LayerView-wtRLA8d-.js";import"./layerViewUtils-CMkISt_G.js";import"./TechniqueInstance-C1QTXG2Y.js";import"./UpdateTracking2D-i86VpTBY.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-BvM3ziBu.js";import"./enums-CmIX1y88.js";import"./utils-DErGHdWc.js";import"./Rect-CUzevAry.js";import"./LabelMetric-C5kPtdD2.js";import"./Program-Baxc898G.js";import"./BufferObject-DuL3vj44.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-edDj4lyl.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-q8664rlg.js";import"./vec42-CraYTRso.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Bn6VrN_Y.js";import"./WGLContainer-DnaVNbt7.js";import"./VertexArrayObject-BZv2AQMS.js";import"./ProgramTemplate-qSWTXlYl.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-Dp7JuO1Z.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-CPehFMa_.js";import"./labelingInfo-CjW7x_bf.js";import"./labelUtils-Bi_bnrs_.js";import"./jsonUtils-DmnXrldM.js";import"./heatmapUtils-cuqhpW56.js";import"./SDFHelper-vAMmiuW9.js";import"./floatRGBA-DkVufvZS.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-Cc-DHYH5.js";import"./RefreshableLayerView-Cw6uFqFD.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
