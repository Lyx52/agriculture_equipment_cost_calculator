import{v as a,x as n,y as d,P as u,bd as l}from"./index-BPI4YOF4.js";import{r as g}from"./FeatureLayerView2D-CvwSgS-T.js";import"./Container-m_8ESZXR.js";import"./featureConversionUtils-DlfP10nn.js";import"./FeatureEffect-Cgv8J2M8.js";import"./timeSupport-4zjhKSTc.js";import"./LayerView-CzNs_QEX.js";import"./layerViewUtils-Cj8ozUbv.js";import"./TechniqueInstance-DqiuhIJe.js";import"./UpdateTracking2D-5WrxpuoD.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DkCHRpel.js";import"./enums-CmIX1y88.js";import"./utils-Ptp5z8Ut.js";import"./Rect-CUzevAry.js";import"./LabelMetric-CWP6gdo6.js";import"./Program-BCgXGUHW.js";import"./BufferObject-CevjLkuh.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Bzhjedn5.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-D_f8_gHH.js";import"./vec42-rfqKqpXN.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-CBdA67dn.js";import"./WGLContainer-CfSZzKqC.js";import"./VertexArrayObject-jdusAA83.js";import"./ProgramTemplate-Qao8Ku00.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-Cv57ShU5.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-D4SIal37.js";import"./labelingInfo-CgumPG8A.js";import"./labelUtils-D_5Yii2G.js";import"./jsonUtils-x_mCNC-5.js";import"./heatmapUtils-UfepdUiU.js";import"./SDFHelper-C62hTCcd.js";import"./floatRGBA-B3QORlaB.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-BzykVvlL.js";import"./RefreshableLayerView-DouRt9Mo.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
