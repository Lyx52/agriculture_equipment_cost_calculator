import{cC as L,dR as O,bI as f,ek as u,y,h3 as m,bd as d,gv as _,V as b,v as s,w as l,h4 as F,b5 as h,x as g,gD as j,dT as M,dU as C,dX as I,dV as P,dW as R,dY as T,ch as K,aP as S,q as N,H as A,bA as J,d$ as V,e2 as W}from"./index-C_0TPXd0.js";import{j as z,S as w,g as x,d as k}from"./kmlUtils-HGhW2X19.js";import"./jsonUtils-bFxd5ywV.js";import"./UniqueValueRenderer-u11R3eWm.js";import"./ColorStop-Bv9MBw-U.js";import"./diffUtils-BUfgL8kp.js";import"./colorRamps-B1AJ_Q9o.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-BsbJ85jL.js";import"./jsonUtils-toxuKLOX.js";import"./defaults-CpoEaRX9.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-Cloo2lhX.js";import"./LRUCache-BfaJKHb9.js";import"./FieldsIndex-DTP3cAYB.js";import"./UnknownTimeZone-STYCdH1l.js";import"./OverrideHelper-DJvOK6Ix.js";import"./colorUtils-DsB8bErW.js";import"./vec42-C2fTO1wE.js";import"./vec4f64-CMoMXWBi.js";import"./utils-BJnQpl_c.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DeS5cgLA.js";import"./heatmapUtils-CLnWxw1E.js";var p;let a=p=class extends L.EventedMixin(O(j)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([f(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},u),f(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},u),y(()=>this.sublayers,(t,r)=>{if(r)for(const i of r)i.layer=i.parent=null;if(t)for(const i of t)i.parent=this,i.layer=this.layer},u),y(()=>this.layer,t=>{if(this.sublayers)for(const r of this.sublayers)r.layer=t},u)])}initialize(){m(()=>this.networkLink).then(()=>m(()=>this.visible===!0)).then(()=>this.load())}load(e){var i;if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,r=this._fetchService(((i=this._get("networkLink"))==null?void 0:i.href)??"",t).then(n=>{var c;const $=z(n.sublayers);this.fullExtent=d.fromJSON($),this.sourceJSON=n;const v=_(b.ofType(p),w(p,n));this.sublayers?this.sublayers.addMany(v):this.sublayers=v,(c=this.layer)==null||c.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return x(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(r=>k(r.data))}};s([l()],a.prototype,"description",void 0),s([l({type:d})],a.prototype,"fullExtent",void 0),s([l()],a.prototype,"id",void 0),s([l({readOnly:!0,value:null})],a.prototype,"networkLink",void 0),s([l({json:{write:{allowNull:!0}}})],a.prototype,"parent",void 0),s([l({type:b.ofType(a),json:{write:{allowNull:!0}}})],a.prototype,"sublayers",void 0),s([l({value:null,json:{read:{source:"name",reader:e=>F(e)}}})],a.prototype,"title",void 0),s([l({value:!0})],a.prototype,"visible",null),s([h("visible",["visibility"])],a.prototype,"readVisible",null),s([l()],a.prototype,"sourceJSON",void 0),s([l()],a.prototype,"layer",void 0),a=p=s([g("esri.layers.support.KMLSublayer")],a);const E=a,H=["kml","xml"];let o=class extends M(C(I(P(R(T(W)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new K({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=S.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([y(()=>this.sublayers,(e,t)=>{t&&t.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},u),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,r){return w(E,t,r,this._visibleFolders)}writeSublayers(e,t){const r=[],i=e.toArray();for(;i.length;){const n=i[0];n.networkLink||(n.visible&&r.push(n.id),n.sublayers&&i.push(...n.sublayers.toArray())),i.shift()}t.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?N(this.url,H)||"KML":e}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],r=i=>{i.visible&&(t.push(i),i.sublayers&&i.sublayers.forEach(r))};return e&&e.forEach(r),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(A).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:x(this.url??"",this.outSpatialReference,this.refreshInterval,e)),r=k(t.data);this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=r=>{if(r.sublayers)for(const i of r.sublayers.items)t(i),i.visible&&i.fullExtent&&(e!=null?e.union(i.fullExtent):e=i.fullExtent.clone())};return t(this),e}};s([l({readOnly:!0})],o.prototype,"allSublayers",void 0),s([l({type:S})],o.prototype,"outSpatialReference",void 0),s([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([l({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"legendEnabled",void 0),s([l({type:["show","hide","hide-children"]})],o.prototype,"listMode",void 0),s([l({type:["KML"]})],o.prototype,"operationalLayerType",void 0),s([l({})],o.prototype,"resourceInfo",void 0),s([l({type:b.ofType(E),json:{write:{ignoreOrigin:!0}}})],o.prototype,"sublayers",void 0),s([h(["web-map","portal-item"],"sublayers",["visibleFolders"])],o.prototype,"readSublayersFromItemOrWebMap",null),s([h("service","sublayers",["sublayers"])],o.prototype,"readSublayers",null),s([J("sublayers")],o.prototype,"writeSublayers",null),s([l({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),s([l({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],o.prototype,"title",null),s([l(V)],o.prototype,"url",void 0),s([l({readOnly:!0})],o.prototype,"visibleSublayers",null),s([l({type:d})],o.prototype,"extent",void 0),s([l()],o.prototype,"fullExtent",null),o=s([g("esri.layers.KMLLayer")],o);const ve=o;export{ve as default};
