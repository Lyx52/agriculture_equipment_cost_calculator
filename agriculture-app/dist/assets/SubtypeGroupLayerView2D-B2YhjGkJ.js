import{v as a,x as n,y as d,P as u,bd as l}from"./index-vwFCrh65.js";import{r as g}from"./FeatureLayerView2D-DhvrOuIo.js";import"./Container-CA6U6Zw_.js";import"./featureConversionUtils-DP11ESyM.js";import"./FeatureEffect-fH1JXKej.js";import"./timeSupport-CmzyF5zj.js";import"./LayerView-B3i51k7p.js";import"./layerViewUtils-Prbii7se.js";import"./TechniqueInstance-YbY5T-47.js";import"./UpdateTracking2D-vAOy0va2.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-CXEd-KA8.js";import"./enums-CmIX1y88.js";import"./utils-CiJFD0tV.js";import"./Rect-CUzevAry.js";import"./LabelMetric-CF-KD4iK.js";import"./Program-GbND54GO.js";import"./BufferObject-BqIzq7B2.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DqJmGW44.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-BJU8S4YG.js";import"./vec42-Cs73bLm9.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-pP593M1t.js";import"./WGLContainer-DPsBjuBD.js";import"./VertexArrayObject-DpOFu0J0.js";import"./ProgramTemplate-Cw5dwdI8.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-C9QAOR_8.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-qIR61d7S.js";import"./labelingInfo-BBGFX0uB.js";import"./labelUtils-DZe0tL5U.js";import"./jsonUtils-BwZEF7qG.js";import"./heatmapUtils-BoqcH4lP.js";import"./SDFHelper-BkIc72AQ.js";import"./floatRGBA-DFF23g29.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-kILTy23o.js";import"./RefreshableLayerView-XqOMIjWT.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
