import{v as a,x as n,y as d,P as u,bd as l}from"./index-Dq00kJcf.js";import{r as g}from"./FeatureLayerView2D-N8MMoyz_.js";import"./Container-Bxi-gfjP.js";import"./featureConversionUtils-C7HrPzZc.js";import"./FeatureEffect-DhAa3fOt.js";import"./timeSupport-Bw_kx-nX.js";import"./LayerView-dIqQvL5t.js";import"./layerViewUtils-f-nBoSBK.js";import"./TechniqueInstance-BMjOCf9u.js";import"./UpdateTracking2D-HUQsREbk.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-BNx60U-f.js";import"./enums-CmIX1y88.js";import"./utils-_U6Nvs0J.js";import"./Rect-CUzevAry.js";import"./LabelMetric-DrFJF4DD.js";import"./Program-DaKcruV0.js";import"./BufferObject-DV5gp3E2.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-D8rrudJp.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-DtI7Tnmn.js";import"./vec42-DcRDHaZs.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-CiQfvUOD.js";import"./WGLContainer-CwxNGV-l.js";import"./VertexArrayObject-CQpvQm1g.js";import"./ProgramTemplate-D4MBUxaf.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-dFv6FgLH.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-CQfOYfMG.js";import"./labelingInfo-yTrIas6P.js";import"./labelUtils-BqBdfPXQ.js";import"./jsonUtils-DrdVzRPu.js";import"./heatmapUtils-XV8aRAO5.js";import"./SDFHelper-V-jhqS3L.js";import"./floatRGBA-Dg5nmR35.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-HI8n_dpp.js";import"./RefreshableLayerView-DXPLw5OY.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
