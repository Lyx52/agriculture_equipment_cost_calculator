import{v as a,x as n,y as d,P as u,bd as l}from"./index-BqEcDQ06.js";import{r as g}from"./FeatureLayerView2D-BuDX5jL6.js";import"./Container-B6eFjNpJ.js";import"./featureConversionUtils-CI3OYdQj.js";import"./FeatureEffect-DHv0J86Y.js";import"./timeSupport-cGS1850n.js";import"./LayerView-BeQcxZV_.js";import"./layerViewUtils-kucIml8D.js";import"./TechniqueInstance-DJtomysv.js";import"./UpdateTracking2D-BEiG25AE.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-645Ai7yq.js";import"./enums-CmIX1y88.js";import"./utils-Ds-BPfQE.js";import"./Rect-CUzevAry.js";import"./LabelMetric-DED8Whxb.js";import"./Program-CO8BPV4L.js";import"./BufferObject-DF2pCKZ5.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DDkbU2vr.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-DlkzN0BP.js";import"./vec42-DggLSepU.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-DOWCWxU5.js";import"./WGLContainer-Bs0WQdMr.js";import"./VertexArrayObject-Bzb-ICTL.js";import"./ProgramTemplate-Cu1Ndttb.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-C_rMIx2e.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-B5kL47MD.js";import"./labelingInfo-CV2Zt52Y.js";import"./labelUtils-e4FJlVhq.js";import"./jsonUtils-DAOTo9ET.js";import"./heatmapUtils-Cw0QAQCc.js";import"./SDFHelper-DXobEwmt.js";import"./floatRGBA-DVUHtL6Q.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-DGCMnTiK.js";import"./RefreshableLayerView-BnXKL5XE.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
