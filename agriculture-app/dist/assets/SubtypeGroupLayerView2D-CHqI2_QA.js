import{v as a,x as n,y as d,P as u,bd as l}from"./index-CJH_J4CP.js";import{r as g}from"./FeatureLayerView2D-sdmBDgNF.js";import"./Container-BrthI9oX.js";import"./featureConversionUtils-B0MVal57.js";import"./FeatureEffect-BGAn0Us0.js";import"./timeSupport-Dk8aAReF.js";import"./LayerView-DzRiTO59.js";import"./layerViewUtils-CqFY-ESW.js";import"./TechniqueInstance-DuZ65mI9.js";import"./UpdateTracking2D-BNuQBBn-.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-Cvt0rrlD.js";import"./enums-CmIX1y88.js";import"./utils-DTMQyJlw.js";import"./Rect-CUzevAry.js";import"./LabelMetric-lIyapUm6.js";import"./Program--7alo-eS.js";import"./BufferObject-fNZrMTYI.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-TU-fEn5-.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-WNCJul3G.js";import"./vec42-CU3xWxQ3.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-BO9YEavr.js";import"./WGLContainer-symg6zi1.js";import"./VertexArrayObject-D-_w005V.js";import"./ProgramTemplate-BjLRskaa.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-C014YkwN.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-Co0hYajS.js";import"./labelingInfo-Bzj2iLC_.js";import"./labelUtils-Ckg9C_Ag.js";import"./jsonUtils-CxuQjCXP.js";import"./heatmapUtils-DYzpYq9L.js";import"./SDFHelper-DAJUN2cV.js";import"./floatRGBA-CiDnQhCs.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-oRjU1Qcu.js";import"./RefreshableLayerView-CfKoAhuj.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
