const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/streamLayerUtils-CkcLKqX_.js","assets/utils-Dnl48iBY.js","assets/index-FQ6NIrtc.js","assets/index-CA8IcAI7.css","assets/originUtils-D69mHv66.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/jsonContext-aAmX-7kP.js","assets/saveUtils-Btnskgi6.js","assets/createConnection-KWNauQ5s.js"])))=>i.map(i=>d[i]);
import{v as t,w as r,x as I,bJ as F,dT as P,en as E,dX as A,dU as O,dV as k,dW as D,dY as U,bI as C,a_ as x,eX as N,s as d,Z as V,gT as f,n as L,_ as g,dp as h,f9 as J,ft as G,$ as z,bE as M,gU as W,h9 as q,bo as Y,gW as Z,d_ as X,ev as v,ha as Q,hb as B,gY as H,A as K,bg as w,ax as ee,gZ as te,d$ as ie,e2 as re}from"./index-FQ6NIrtc.js";import"./UniqueValueRenderer-5cQFnBNI.js";import{o as oe,m as se,u as ne}from"./jsonUtils-rU8bnrI4.js";import{l as ae}from"./ArcGISService-5C8xASfg.js";import{e as pe}from"./CustomParametersMixin-DYbUQT8J.js";import{c as le}from"./FeatureEffectLayer-C9aM1gLI.js";import{c as de}from"./FeatureReductionLayer-DgYHm9yz.js";import{z as me}from"./featureLayerUtils-D8PpDJ5P.js";import{s as ce}from"./fieldProperties-BLDKb35O.js";import{C as ue,n as he}from"./labelingInfo-B9XwtkCA.js";import{t as ye}from"./styleUtils-C3LBSwaS.js";import{p as fe}from"./popupUtils-BcgoQWxh.js";import{A as c}from"./interfaces-CL2NbQte.js";import"./ColorStop-C0cWJKcU.js";import"./diffUtils-Sy9wOSm_.js";import"./colorRamps-BWXm48ks.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-CGgcGtro.js";import"./jsonUtils-Cjd4OtdN.js";import"./defaults-5U_bo2JV.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-6RDBu-oj.js";import"./LRUCache-DikE31si.js";import"./FieldsIndex-TAUJqe53.js";import"./UnknownTimeZone-Be8mEiwh.js";import"./OverrideHelper-CkkZB-ge.js";import"./colorUtils-CzlsGcMq.js";import"./vec42-tLEoJqCS.js";import"./vec4f64-CMoMXWBi.js";import"./utils-DkkfIAv8.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-TLUwA-bA.js";import"./heatmapUtils-DiK9geQj.js";import"./FeatureEffect-DekgKGaa.js";import"./FeatureReductionSelection-wcDF_4ZE.js";import"./MD5-C9MwAd2G.js";import"./labelUtils-BGHbEDiD.js";var y;let l=y=class extends F{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new y({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};t([r({type:Number,json:{write:!0}})],l.prototype,"age",void 0),t([r({type:Number,json:{write:!0}})],l.prototype,"ageReceived",void 0),t([r({type:Number,json:{write:!0}})],l.prototype,"displayCount",void 0),t([r({type:Number,json:{write:!0}})],l.prototype,"maxObservations",void 0),l=y=t([I("esri.layers.support.PurgeOptions")],l);const $=l,b=ce();function S(e,o){return new d("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${o}`,{layer:e})}let i=class extends de(le(P(E(A(O(ae(k(D(U(pe(C(re)))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new $,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=x.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=N(async(o,s,a)=>{const{save:n,saveAs:p}=await g(()=>import("./streamLayerUtils-CkcLKqX_.js"),__vite__mapDeps([0,1,2,3,4,5,6,7]));switch(o){case c.SAVE:return n(this,s);case c.SAVE_AS:return p(this,a,s)}})}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new d("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(V).then(()=>this._fetchService(o))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const o=this._normalizeFeatureReduction(e);this._set("featureReduction",o)}set renderer(e){f(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,o,s){var n;o=o.layerDefinition||o;const a=(n=o.drawingInfo)==null?void 0:n.renderer;if(a){const p=oe(a,o,s)||void 0;return p||L.getLogger(this).error("Failed to create renderer",{rendererDefinition:o.drawingInfo.renderer,layer:this,context:s}),p}return me(o,s)}async connect(e){const[{createConnection:o}]=await Promise.all([g(()=>import("./createConnection-KWNauQ5s.js"),__vite__mapDeps([8,2,3])),this.load()]),s=this.geometryType?h.toJSON(this.geometryType):null,{customParameters:a=null,definitionExpression:n=null,geometryDefinition:p=null,maxReconnectionAttempts:R=0,maxReconnectionInterval:j=20,spatialReference:T=this.spatialReference}=e||this.createConnectionParameters(),m=o(this.parsedUrl,this.spatialReference,T,s,n,p,R,j,a??void 0),_=J([this.on("send-message-to-socket",u=>m.sendMessageToSocket(u)),this.on("send-message-to-client",u=>m.sendMessageToClient(u))]);return m.once("destroy",_.remove),m}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return fe(this,e)}createQuery(){const e=new G;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,o){if(!this.fields)return null;let s=null;return this.fields.some(a=>(a.name===e&&(s=a.domain),!!s)),s}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(c.SAVE,e)}async saveAs(e,o){return this._debouncedSaveOperations(c.SAVE_AS,o,e)}write(e,o){const s=o==null?void 0:o.messages;return this.webSocketUrl?(s==null||s.push(S(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,o):(s==null||s.push(S(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){var o,s,a;if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:n}=await z(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=n}}else{if(!((o=this.timeInfo)!=null&&o.trackIdField))throw new d("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const n=(s=this.fields.find(p=>p.type==="oid"))==null?void 0:s.name;if(!n)throw new d("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=n}if(!this.fields)throw new d("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(n=>n.name===this.objectIdField)||this.fields.push(new M({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new d("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(a=this.portalItem)==null?void 0:a.portal,url:this.parsedUrl}),f(this.renderer,this.fieldsIndex),W(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField="__esri_stream_id__"),ye(this,{origin:"service"})}};t([r({type:String})],i.prototype,"copyright",void 0),t([r({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),t([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),t([r({type:String})],i.prototype,"displayField",void 0),t([r({type:q})],i.prototype,"elevationInfo",void 0),t([r({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],i.prototype,"featureReduction",null),t([r(b.fields)],i.prototype,"fields",void 0),t([r(b.fieldsIndex)],i.prototype,"fieldsIndex",void 0),t([r({type:Y,json:{name:"layerDefinition.definitionGeometry",write:!0}})],i.prototype,"geometryDefinition",void 0),t([r({type:h.apiValues,json:{read:{reader:h.read}}})],i.prototype,"geometryType",void 0),t([r(Z)],i.prototype,"labelsVisible",void 0),t([r({type:[ue],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:he},write:!0}})],i.prototype,"labelingInfo",void 0),t([r(X)],i.prototype,"legendEnabled",void 0),t([r({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],i.prototype,"listMode",void 0),t([r({type:v})],i.prototype,"maxReconnectionAttempts",void 0),t([r({type:v})],i.prototype,"maxReconnectionInterval",void 0),t([r(Q)],i.prototype,"maxScale",void 0),t([r(B)],i.prototype,"minScale",void 0),t([r({type:String})],i.prototype,"objectIdField",void 0),t([r({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],i.prototype,"operationalLayerType",void 0),t([r({readOnly:!0})],i.prototype,"outFields",void 0),t([r(H)],i.prototype,"popupEnabled",void 0),t([r({type:K,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),t([r({type:$})],i.prototype,"purgeOptions",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"refreshInterval",void 0),t([r({types:se,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:ne,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],i.prototype,"renderer",null),t([w("service","renderer",["drawingInfo.renderer","defaultSymbol"]),w("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],i.prototype,"readRenderer",null),t([r((()=>{const e=ee(te);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],i.prototype,"screenSizePerspectiveEnabled",void 0),t([r()],i.prototype,"sourceJSON",void 0),t([r({type:x,json:{origins:{service:{read:{source:"spatialReference"}}}}})],i.prototype,"spatialReference",void 0),t([r({json:{read:!1}})],i.prototype,"type",void 0),t([r(ie)],i.prototype,"url",void 0),t([r({type:Number})],i.prototype,"updateInterval",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"useViewTime",void 0),t([r({type:String})],i.prototype,"webSocketUrl",void 0),i=t([I("esri.layers.StreamLayer")],i);const et=i;export{et as default};
