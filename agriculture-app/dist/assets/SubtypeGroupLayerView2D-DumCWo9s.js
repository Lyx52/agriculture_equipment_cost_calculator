import{v as a,x as n,y as d,P as u,bd as l}from"./index-CULXreD7.js";import{r as g}from"./FeatureLayerView2D-B3dfn8O4.js";import"./Container-B7IWd4M7.js";import"./featureConversionUtils-DOHoWKkL.js";import"./FeatureEffect-Dce8OD0a.js";import"./timeSupport-DpTZ1caC.js";import"./LayerView-B7uoMyrv.js";import"./layerViewUtils-Btc1mTL0.js";import"./TechniqueInstance-Baa2wo5a.js";import"./UpdateTracking2D-BtsV3Mdf.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-C9RiylqX.js";import"./enums-CmIX1y88.js";import"./utils-g8r2S7hA.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Bmknb8E5.js";import"./Program-DH1zuaWk.js";import"./BufferObject-nM7Dz4AA.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Do2Q1ifU.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-Bvz97Ujo.js";import"./vec42-B8z1iAZt.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-B4ts-mpm.js";import"./WGLContainer-CBkHqSPG.js";import"./VertexArrayObject-Q8B6lwSo.js";import"./ProgramTemplate-zcpJctic.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-DWblEln2.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-DchhYIiN.js";import"./labelingInfo-CovFeMis.js";import"./labelUtils-DHAbEIYy.js";import"./jsonUtils-CEVDTOJb.js";import"./heatmapUtils-D93FOflh.js";import"./SDFHelper-CtzJaoX2.js";import"./floatRGBA-BXP3WEPn.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-C0p9APMx.js";import"./RefreshableLayerView-Z1wyEc5J.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
