import{B as o,C as g,V as m,F as l,k as p,v as a,w as n,x as c}from"./index-DR-6o-62.js";import{j as d,y as u}from"./LayerView-DEuXNmys.js";import{t as w}from"./GraphicContainer-CiabV6y8.js";import{F as y}from"./GraphicsView2D-D0UIJdUb.js";import{e as V}from"./HighlightCounter-Czi-fdpx.js";import"./Container-Ho8_fOan.js";import"./layerViewUtils-DT8KkkXA.js";import"./AGraphicContainer-JlJGMcdd.js";import"./TechniqueInstance-DDLyTklB.js";import"./UpdateTracking2D-CUOb59bb.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DuR_ydbs.js";import"./enums-CmIX1y88.js";import"./utils-CvyKmjzw.js";import"./Rect-CUzevAry.js";import"./LabelMetric-bd1hhUvz.js";import"./Program-DCD510He.js";import"./BufferObject-DOSPwKDn.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Bsj_O7ZO.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-CDZozprG.js";import"./vec42-c_7PZLvB.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Cwej3604.js";import"./WGLContainer-RxrUvPaG.js";import"./VertexArrayObject-88z30aHT.js";import"./ProgramTemplate-R1bMmnZ7.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-CYCePvL6.js";import"./FeatureCommandQueue-rfC2nUW2.js";import"./constants-F8oTIn7N.js";import"./FieldsIndex-CtGvfgCw.js";import"./UnknownTimeZone-DDU2a_Rx.js";import"./OverrideHelper-B-V1wuq8.js";import"./colorUtils-nPNhwrYt.js";import"./quantizationUtils-CU2bNUfj.js";import"./AttributeStore-B_Zd7xYI.js";import"./TimeOnly-DJhpmGFp.js";import"./timeSupport-R3pYGJHf.js";import"./labelUtils-Bbd4FFa7.js";import"./diffUtils-CPblyvDB.js";import"./normalizeUtilsSync-BGPLCCnX.js";let s=class extends d(u){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(l);return e!=null&&e.length?(this._addHighlight(e,t),p(()=>this._removeHighlight(e,t))):p()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightGroups(r),h=this._getHighlightBits(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};a([n()],s.prototype,"graphicsView",void 0),s=a([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const ni=s;export{ni as default};
