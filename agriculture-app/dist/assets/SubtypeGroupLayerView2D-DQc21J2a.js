import{v as a,x as n,y as d,P as u,b2 as l}from"./index-Ch47bSDW.js";import{r as g}from"./FeatureLayerView2D-DmkFoqko.js";import"./Container-Cp--UjYI.js";import"./featureConversionUtils-CWw9DhXO.js";import"./FeatureEffect-DQSHwa10.js";import"./timeSupport-DgF3tVF7.js";import"./LayerView-BPgAFtxH.js";import"./layerViewUtils-DmOMoERf.js";import"./TechniqueInstance-CXIW4RTN.js";import"./UpdateTracking2D-8ua241XR.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-CtGLNB8i.js";import"./enums-CmIX1y88.js";import"./utils-CnD5s_hH.js";import"./Rect-CUzevAry.js";import"./LabelMetric-DCpc9cv5.js";import"./Program-Di3dNcvG.js";import"./BufferObject-CsEC4xdw.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-6A0IO0qk.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-BE9ZcXOP.js";import"./vec42-B9Pq9Z7t.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-BTlGAYZF.js";import"./WGLContainer-BA1OvckG.js";import"./VertexArrayObject-Dku_SZL9.js";import"./ProgramTemplate-Cz0kt36S.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BpxulnjD.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-0nlwLLSP.js";import"./labelingInfo-_44kpw5T.js";import"./labelUtils-DZ9Qk58S.js";import"./jsonUtils-BL34k1sb.js";import"./heatmapUtils-DdBfnQgT.js";import"./SDFHelper-CoP_7V6e.js";import"./floatRGBA-qJMFp8vo.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-qmktA1id.js";import"./RefreshableLayerView-DLDFBGsa.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
