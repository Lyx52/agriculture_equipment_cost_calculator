import{v as a,x as n,y as d,P as u,bd as l}from"./index-Db6eqHJx.js";import{r as g}from"./FeatureLayerView2D-Cui0aO_l.js";import"./Container-Bmnx1Hsw.js";import"./featureConversionUtils-iog1B4Ag.js";import"./FeatureEffect-Dlg0ODCW.js";import"./timeSupport-Bv4P2ARk.js";import"./LayerView-DwZ4zSg1.js";import"./layerViewUtils-BP-Z48JH.js";import"./TechniqueInstance-yklfaKqp.js";import"./UpdateTracking2D-BPFcWV7S.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-CYKbjz6g.js";import"./enums-CmIX1y88.js";import"./utils-jUX8E6P2.js";import"./Rect-CUzevAry.js";import"./LabelMetric-C5IK9lng.js";import"./Program-CXr0y8TG.js";import"./BufferObject-Dp_H2ocs.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DbDS4JcW.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-CBJ6elJQ.js";import"./vec42-cfJ7IW4o.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-c1E1YLjV.js";import"./WGLContainer-vJ4WU1-v.js";import"./VertexArrayObject-Dfc3SvPh.js";import"./ProgramTemplate-KaCAH5cK.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-C742HHOv.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-sTdNL6To.js";import"./labelingInfo-CDnluU_W.js";import"./labelUtils-JIjMZGg_.js";import"./jsonUtils-Qw9lbHd8.js";import"./heatmapUtils-D5thX0fq.js";import"./SDFHelper-D0iSX-ui.js";import"./floatRGBA-D_eavGBh.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-vzyXTR2A.js";import"./RefreshableLayerView-Cma4ebCM.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
