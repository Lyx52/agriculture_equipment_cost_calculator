import{dh as j,gL as q,e3 as N,gM as B,gN as I,gO as P,gr as Q,v as s,w as i,x as k,bJ as z,cQ as C,gP as D,db as F,dc as l,gQ as G,dw as H,gc as J}from"./index-BI6GYSNG.js";import{e as f}from"./mat4f64-CSKppSlJ.js";import{v as M,b as p,x as L}from"./quat-BaZhTISX.js";import{e as x}from"./quatf64-aQ5IuZRd.js";function a(t=w){return[t[0],t[1],t[2],t[3]]}function c(t,o,n=a()){return j(n,t),n[3]=o,n}function R(t,o=a()){const n=q(e,t);return v(o,N(M(o,n))),o}function y(t,o,n=a()){return p(e,t,h(t)),p(A,o,h(o)),L(e,A,e),v(n,N(M(n,e)))}function S(t,o,n,m=a()){return c(B,t,u),c(I,o,$),c(P,n,d),y(u,$,u),y(u,d,m),m}function V(t){return t}function O(t){return t[3]}function h(t){return Q(t[3])}function v(t,o){return t[3]=o,t}const w=[0,0,1,0],e=x(),A=x();a();const u=a(),$=a(),d=a();var g;let r=g=class extends z{constructor(t){super(t),this.translation=C(),this.rotationAxis=D(w),this.rotationAngle=0,this.scale=F(1,1,1)}get rotation(){return c(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=l(t),this.rotationAngle=O(t)}get localMatrix(){const t=f();return p(b,this.rotation,h(this.rotation)),G(t,b,this.translation,this.scale),t}get localMatrixInverse(){return H(f(),this.localMatrix)}equals(t){return this===t||t!=null&&J(this.localMatrix,t.localMatrix)}clone(){const t={translation:l(this.translation),rotationAxis:l(this.rotationAxis),rotationAngle:this.rotationAngle,scale:l(this.scale)};return new g(t)}};s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"translation",void 0),s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAxis",void 0),s([i({type:Number,nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAngle",void 0),s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"scale",void 0),s([i()],r.prototype,"rotation",null),s([i()],r.prototype,"localMatrix",null),s([i()],r.prototype,"localMatrixInverse",null),r=g=s([k("esri.geometry.support.MeshTransform")],r);const b=x(),W=r;export{W as N,S as d,a as j,R as k,V as w,h as z};
