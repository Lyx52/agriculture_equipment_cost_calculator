import{v as a,x as n,y as d,P as u,b2 as l}from"./index-I9roUNmP.js";import{r as g}from"./FeatureLayerView2D-CKxdQWQW.js";import"./Container-B4m4uTI7.js";import"./featureConversionUtils-CrRZ7AGW.js";import"./FeatureEffect-DkX6isxy.js";import"./timeSupport-DOYfRaCx.js";import"./LayerView-DMsBPfF2.js";import"./layerViewUtils-D25Q3ZaC.js";import"./TechniqueInstance-CYoSOtYP.js";import"./UpdateTracking2D-BvA34HoJ.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-CE1g-42k.js";import"./enums-CmIX1y88.js";import"./utils-CGHRyy8b.js";import"./Rect-CUzevAry.js";import"./LabelMetric-gqe9GLXj.js";import"./Program-B3SUtQ_L.js";import"./BufferObject-CSoqY3EV.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Cm_qt2WG.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-CbHe4dNB.js";import"./vec42-CHXqGT8m.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Cr-veogy.js";import"./WGLContainer-B6GHQ1qr.js";import"./VertexArrayObject-H9P0ZGkF.js";import"./ProgramTemplate-BW-avQky.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-hI6gZVNF.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-Bm-6f3SG.js";import"./labelingInfo-B0PonWa-.js";import"./labelUtils-Buq9Ysk2.js";import"./jsonUtils-7kaPLPzc.js";import"./heatmapUtils-D7N0G17y.js";import"./SDFHelper-BR8ghlBt.js";import"./floatRGBA-BBUtGkgV.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-_bvZvSpw.js";import"./RefreshableLayerView-DiBTlMUF.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
