import{v as a,x as n,y as d,P as u,bd as l}from"./index-DIELwNgn.js";import{r as g}from"./FeatureLayerView2D-DIQqlNHp.js";import"./Container-cerVDTjF.js";import"./featureConversionUtils-BXNrsLsj.js";import"./FeatureEffect-IUgU5c4h.js";import"./timeSupport-bJLuAO1f.js";import"./LayerView-BOkIlqpF.js";import"./layerViewUtils-B06dRYTM.js";import"./TechniqueInstance-F-Ngvkr2.js";import"./UpdateTracking2D-Bm9NUtZy.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-Bnty7r-q.js";import"./enums-CmIX1y88.js";import"./utils-IyqZAcs0.js";import"./Rect-CUzevAry.js";import"./LabelMetric-wm6SsQqp.js";import"./Program-TEiQc38S.js";import"./BufferObject-B2nNAf50.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DmcQeuV9.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-DR0o0iNQ.js";import"./vec42-CwvTV44c.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-B8wIEQ2G.js";import"./WGLContainer-DF8gPjMa.js";import"./VertexArrayObject-vsZpliw-.js";import"./ProgramTemplate-DHFZ0saW.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-CUdIg67v.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-CD2BIg4v.js";import"./labelingInfo-CVm2RtFg.js";import"./labelUtils-DQRI0AOZ.js";import"./jsonUtils-D3NFbyor.js";import"./heatmapUtils-nqIikt-3.js";import"./SDFHelper-uRgWgP-M.js";import"./floatRGBA-CFs0djjk.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-DVVZrC15.js";import"./RefreshableLayerView-BOwuy3Vk.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
