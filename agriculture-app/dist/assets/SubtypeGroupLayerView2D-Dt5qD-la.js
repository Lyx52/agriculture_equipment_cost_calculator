import{v as a,x as n,y as d,P as u,bd as l}from"./index-B4yC6Msm.js";import{r as g}from"./FeatureLayerView2D-JXLCMBdz.js";import"./Container-7qhguRdo.js";import"./featureConversionUtils-BQfZ7T-N.js";import"./FeatureEffect-G4_Us3Tp.js";import"./timeSupport-0QxyqsSt.js";import"./LayerView-D1m5peO8.js";import"./layerViewUtils-CjHyScNp.js";import"./TechniqueInstance-CxFWvKnK.js";import"./UpdateTracking2D-YkGYFJz5.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DQH7LGP3.js";import"./enums-CmIX1y88.js";import"./utils-ClpvmSEq.js";import"./Rect-CUzevAry.js";import"./LabelMetric-BDUj3y2E.js";import"./Program-BFgZteIE.js";import"./BufferObject-CMMVl6OW.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DnmZdWgp.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-Hr3_GDqj.js";import"./vec42-24-31NTj.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-BMATpvGm.js";import"./WGLContainer-DtLwLn_W.js";import"./VertexArrayObject-Cq8P-lxF.js";import"./ProgramTemplate-DQbdqJEv.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-CIG5lFHa.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-BuLiM2gU.js";import"./labelingInfo-UuMpMNj5.js";import"./labelUtils-C_CYTLRf.js";import"./jsonUtils-i7nhF92d.js";import"./heatmapUtils-5jkRMxwi.js";import"./SDFHelper-CU_8FBiN.js";import"./floatRGBA-Ghhb6Lhs.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-DQ_OBFLu.js";import"./RefreshableLayerView-B_zVEIUO.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
