import{v as a,x as n,y as d,P as u,bd as l}from"./index-DZ7cCpRK.js";import{r as g}from"./FeatureLayerView2D-D7l_HgcH.js";import"./Container-Dao9Wlg3.js";import"./featureConversionUtils-DTYzvnXv.js";import"./FeatureEffect-D1HD1Uvp.js";import"./timeSupport-CdfcYhzN.js";import"./LayerView-CJRY39iQ.js";import"./layerViewUtils-BVh6nw3D.js";import"./TechniqueInstance-tvGYfdda.js";import"./UpdateTracking2D-Bapz9JzL.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DpA1vdo5.js";import"./enums-CmIX1y88.js";import"./utils-8a7xo5Td.js";import"./Rect-CUzevAry.js";import"./LabelMetric-CSp9Qodq.js";import"./Program-B3iokQJj.js";import"./BufferObject-CFL9xKun.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DpCib14x.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-Bw0r2-BV.js";import"./vec42-CBhtCAs_.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-BHytSR7W.js";import"./WGLContainer-BN5lYp2F.js";import"./VertexArrayObject-t_YuQkPf.js";import"./ProgramTemplate-XnppEoAm.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-xD3jRL22.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-BCKcamjF.js";import"./labelingInfo-Dixhn5S8.js";import"./labelUtils-BUvWSmys.js";import"./jsonUtils-FfVKOpcy.js";import"./heatmapUtils-hWl7yoNe.js";import"./SDFHelper-B2Ht88so.js";import"./floatRGBA-7kL_IwSK.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-B_tQyi6b.js";import"./RefreshableLayerView-Cr5HWA14.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
