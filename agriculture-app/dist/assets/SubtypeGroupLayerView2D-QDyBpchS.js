import{v as a,x as n,y as d,P as u,b2 as l}from"./index-C_0TPXd0.js";import{r as g}from"./FeatureLayerView2D-B5vV7Yjh.js";import"./Container-DHsbTbno.js";import"./featureConversionUtils-CS5j4MVh.js";import"./FeatureEffect-B7umf6P2.js";import"./timeSupport-B4qdsidx.js";import"./LayerView-BJRJyTUj.js";import"./layerViewUtils-D3TjRF34.js";import"./TechniqueInstance-U8UDajRR.js";import"./UpdateTracking2D-CXsZq7SM.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-BBSMn4Le.js";import"./enums-CmIX1y88.js";import"./utils-BJnQpl_c.js";import"./Rect-CUzevAry.js";import"./LabelMetric-BC7jm3Ed.js";import"./Program-Cp0lG-X1.js";import"./BufferObject-0vi1PzBc.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-CpoEaRX9.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-CXeKVplE.js";import"./vec42-C2fTO1wE.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-DExuYMGB.js";import"./WGLContainer-Cu0wVonS.js";import"./VertexArrayObject-e5iGkToc.js";import"./ProgramTemplate-2tVE31bU.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-Cp0qJ7AU.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-DJ47b1qb.js";import"./labelingInfo-Cpgh_rcZ.js";import"./labelUtils-DWBzPpF7.js";import"./jsonUtils-toxuKLOX.js";import"./heatmapUtils-CLnWxw1E.js";import"./SDFHelper-k1BVOhbV.js";import"./floatRGBA-CA3hoa-m.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-CrU9tEo5.js";import"./RefreshableLayerView-Wu9XOb7F.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
