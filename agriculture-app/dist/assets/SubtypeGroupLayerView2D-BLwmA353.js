import{v as a,x as n,y as d,P as u,bd as l}from"./index-BEWukIcf.js";import{r as g}from"./FeatureLayerView2D-yp0gCrGJ.js";import"./Container-DYQJBSLe.js";import"./featureConversionUtils-BycQ2T_b.js";import"./FeatureEffect-CaTvvvGX.js";import"./timeSupport-DHeodiFr.js";import"./LayerView-ChF8QLDr.js";import"./layerViewUtils-DhP2Zho1.js";import"./TechniqueInstance-C1CQcpom.js";import"./UpdateTracking2D-DUULt_o-.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-FDtXuCQx.js";import"./enums-CmIX1y88.js";import"./utils-0-0jCVG_.js";import"./Rect-CUzevAry.js";import"./LabelMetric-BpTMtPfU.js";import"./Program-Cze7L6A5.js";import"./BufferObject-mXlS0omq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-BCRTYRyc.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-3VKsc635.js";import"./vec42-CJOBOvab.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Cg1xPhH0.js";import"./WGLContainer-Cdij8VrR.js";import"./VertexArrayObject-Bzbv9zvw.js";import"./ProgramTemplate-CmMuLWQG.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BSmsW6UZ.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-B8gUyiDq.js";import"./labelingInfo-6dvKHS48.js";import"./labelUtils-Ch2HT4zS.js";import"./jsonUtils-CcunwidL.js";import"./heatmapUtils-sLBV0ZEg.js";import"./SDFHelper-DGzWSMyC.js";import"./floatRGBA-CnG1VZWb.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-A4Z90fDB.js";import"./RefreshableLayerView-BvkEWOIz.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
