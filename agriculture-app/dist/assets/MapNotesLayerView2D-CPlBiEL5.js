import{C as u,V as f,F as w,k as g,y as a,P as o,bI as y,v as _,x as V}from"./index-Ca6X6SJU.js";import{j as v,y as C}from"./LayerView-DQVQpq5b.js";import{t as c}from"./GraphicContainer-CPL3WxSU.js";import{F as d}from"./GraphicsView2D-DK9D1v7H.js";import"./Container-reZAA44N.js";import"./layerViewUtils-AP99xC1e.js";import"./AGraphicContainer-DXxT3VfS.js";import"./TechniqueInstance-Cry3maPq.js";import"./UpdateTracking2D-Cpkaiucx.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-BqlXeik3.js";import"./enums-CmIX1y88.js";import"./utils-DhDgF2gQ.js";import"./Rect-CUzevAry.js";import"./LabelMetric-BsUKsEiU.js";import"./Program-4-1dA5Oq.js";import"./BufferObject-PHWezk7N.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-I7Ufnjj8.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-Bl6tSxEz.js";import"./vec42-2JCQ4qjo.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Ds3Gm6yU.js";import"./WGLContainer-CLuRgSOR.js";import"./VertexArrayObject-BeM5oubZ.js";import"./ProgramTemplate-dZU5qqj2.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-Bq0n-SSN.js";import"./FeatureCommandQueue-t1nxl-fk.js";import"./constants-F8oTIn7N.js";import"./FieldsIndex-DjEQZHCo.js";import"./UnknownTimeZone-Hc7M8aTF.js";import"./OverrideHelper-Dbzn6IIA.js";import"./colorUtils-gZi5hGTL.js";import"./quantizationUtils-CKOI_lP5.js";import"./AttributeStore-Bh62z2xv.js";import"./TimeOnly-BqyQS1Tp.js";import"./timeSupport-CxEC7w7u.js";import"./labelUtils-w2wElY7E.js";import"./diffUtils-CmlwBwS8.js";import"./normalizeUtilsSync-BUf7Y5_Z.js";const m="sublayers",l="layerView",H=new Set(["default"]);let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,t){return Array.from(this.graphicsViews(),e=>{const s=e.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const h=this._graphicsViewsFeatureCollectionMap.get(e);for(const r of s)!r.popupTemplate&&h.popupTemplate&&(r.popupTemplate=h.popupTemplate),r.sourceLayer=r.layer=this.layer}return s}).flat().map(e=>({type:"graphic",graphic:e,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):f.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(w);return e!=null&&e.length?(this._addHighlight(e),g(()=>this._removeHighlight(e))):g()}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),e=this.layer.featureCollections;if(e!=null&&e.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of e){const h=new c(this.view.featuresTilingScheme),r=new d({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:t,container:h});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([a(()=>s.visible,p=>r.container.visible=p,o),a(()=>r.updating,()=>this.notifyChange("updating"),o)],l)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),m)}detach(){this._destroyGraphicsViews(),this.removeHandles(m)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],t=this.view,e=()=>this.requestUpdate();for(const s of this.layer.sublayers){const h=new c(this.view.featuresTilingScheme);h.fadeTransitionEnabled=!0;const r=new d({view:t,graphics:s.graphics,requestUpdateCallback:e,container:h});this.addHandles([s.on("graphic-update",r.graphicUpdateHandler),a(()=>s.visible,p=>r.container.visible=p,o),a(()=>r.updating,()=>this.notifyChange("updating"),o)],l),this.container.addChild(r.container),i.push(r)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),t=this._getHighlightBits(H);for(const e of this.graphicsViews())e.setHighlight(i.map(s=>({objectId:s,highlightFlags:t})))}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const fi=n;export{fi as default};
