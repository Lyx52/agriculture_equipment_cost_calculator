import{v as a,x as n,y as d,P as u,bd as l}from"./index-FQ6NIrtc.js";import{r as g}from"./FeatureLayerView2D-BsV9sBzs.js";import"./Container-C_L6N4mU.js";import"./featureConversionUtils-DBZI9Z7E.js";import"./FeatureEffect-DekgKGaa.js";import"./timeSupport-fS6phmcQ.js";import"./LayerView-iwq5tuIT.js";import"./layerViewUtils-NRAHB4rd.js";import"./TechniqueInstance-DvpB5Hmk.js";import"./UpdateTracking2D-DOGJuvCp.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DMEJm0q1.js";import"./enums-CmIX1y88.js";import"./utils-DkkfIAv8.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Yk89pKiF.js";import"./Program-kE2NdNFG.js";import"./BufferObject-C-hDlJ6e.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-5U_bo2JV.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-n9GI4fqQ.js";import"./vec42-tLEoJqCS.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Cd0pp1lx.js";import"./WGLContainer-BvgNhMy1.js";import"./VertexArrayObject-CrSyL1D3.js";import"./ProgramTemplate-CK_rK0wL.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-CDJsXisY.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-Db2S9v7c.js";import"./labelingInfo-B9XwtkCA.js";import"./labelUtils-BGHbEDiD.js";import"./jsonUtils-Cjd4OtdN.js";import"./heatmapUtils-DiK9geQj.js";import"./SDFHelper-CV3RJ_PG.js";import"./floatRGBA-BzA4v5wd.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-BbACsICo.js";import"./RefreshableLayerView-B-oHQw5V.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
