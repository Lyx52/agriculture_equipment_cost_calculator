import{v as a,x as n,y as d,P as u,bd as l}from"./index-Df3Kt0MY.js";import{r as g}from"./FeatureLayerView2D-mtYTaIrS.js";import"./Container-DLzEweRC.js";import"./featureConversionUtils---MDwDO1.js";import"./FeatureEffect-DMcNmJWU.js";import"./timeSupport-BJt7GdVH.js";import"./LayerView-DTDYJuIn.js";import"./layerViewUtils-CezekIvw.js";import"./TechniqueInstance-h_o8cJ1T.js";import"./UpdateTracking2D-CyYHEKHq.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-BKOSw9Nq.js";import"./enums-CmIX1y88.js";import"./utils-BuV376gJ.js";import"./Rect-CUzevAry.js";import"./LabelMetric-nsOYoc8K.js";import"./Program-ChRI2vj1.js";import"./BufferObject-B0SZXfCt.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DU1j7Au0.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-DlnBOelv.js";import"./vec42-CSRDpsMX.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Li-x-U0C.js";import"./WGLContainer-Bb5qlVbr.js";import"./VertexArrayObject-BJ2eJsdW.js";import"./ProgramTemplate-D0DEVH1t.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-CZFagByN.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-DXA5ZxeA.js";import"./labelingInfo-CL_o4o2U.js";import"./labelUtils-D08rjtHZ.js";import"./jsonUtils-hSjS1OgX.js";import"./heatmapUtils-BSXQvYRB.js";import"./SDFHelper-CcwY7Utc.js";import"./floatRGBA-DBaBvdOz.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-CWhX1Cmb.js";import"./RefreshableLayerView-Dn8DvQiJ.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
