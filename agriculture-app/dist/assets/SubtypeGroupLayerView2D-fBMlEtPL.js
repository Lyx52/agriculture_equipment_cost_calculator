import{v as a,x as n,y as d,P as u,bd as l}from"./index-DR-6o-62.js";import{r as g}from"./FeatureLayerView2D-DpI0zbc8.js";import"./Container-Ho8_fOan.js";import"./featureConversionUtils-CYCePvL6.js";import"./FeatureEffect-CdE_bXSb.js";import"./timeSupport-BG30Uvoh.js";import"./LayerView-DEuXNmys.js";import"./layerViewUtils-DT8KkkXA.js";import"./TechniqueInstance-DDLyTklB.js";import"./UpdateTracking2D-CUOb59bb.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DuR_ydbs.js";import"./enums-CmIX1y88.js";import"./utils-CvyKmjzw.js";import"./Rect-CUzevAry.js";import"./LabelMetric-bd1hhUvz.js";import"./Program-DCD510He.js";import"./BufferObject-DOSPwKDn.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Bsj_O7ZO.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-CDZozprG.js";import"./vec42-c_7PZLvB.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Cwej3604.js";import"./WGLContainer-RxrUvPaG.js";import"./VertexArrayObject-88z30aHT.js";import"./ProgramTemplate-R1bMmnZ7.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-rfC2nUW2.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-CBKeV7dm.js";import"./labelingInfo-BWDP89pI.js";import"./labelUtils-Bbd4FFa7.js";import"./jsonUtils-CsXXq3KB.js";import"./heatmapUtils-CUt8ky1R.js";import"./SDFHelper-C0FrG0tQ.js";import"./floatRGBA-dqAIbbx0.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-CNmLW4As.js";import"./RefreshableLayerView-CPnrEmkh.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
