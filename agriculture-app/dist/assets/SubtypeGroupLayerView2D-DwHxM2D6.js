import{v as a,x as n,y as d,P as u,bd as l}from"./index-DfTA9gm4.js";import{r as g}from"./FeatureLayerView2D-B766RUZ_.js";import"./Container-CCRraBC8.js";import"./featureConversionUtils-oLXLvnGR.js";import"./FeatureEffect-Deo_sTro.js";import"./timeSupport-B911VQKz.js";import"./LayerView-aSuLtx32.js";import"./layerViewUtils-C1bXcjuk.js";import"./TechniqueInstance-jVmC7imc.js";import"./UpdateTracking2D-c952kuPG.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DtPglUh2.js";import"./enums-CmIX1y88.js";import"./utils-Be34gDzU.js";import"./Rect-CUzevAry.js";import"./LabelMetric-CcyJBVUf.js";import"./Program-D8xwc7Pb.js";import"./BufferObject-I8_cC7RG.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-P9JUD9J4.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-U7lraF3v.js";import"./vec42-Dh90-hV3.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-CZqUQwrj.js";import"./WGLContainer-My4CrSTG.js";import"./VertexArrayObject-0qo5ohSZ.js";import"./ProgramTemplate-DvpNFTuP.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-DJrzqVwE.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-D5sQY7BX.js";import"./labelingInfo-gNpTSVu8.js";import"./labelUtils-CUoyOmcO.js";import"./jsonUtils-BOausCpD.js";import"./heatmapUtils-OoVwZzPE.js";import"./SDFHelper-CUPPX7Ym.js";import"./floatRGBA-DaJCFpV6.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-D3RBChIr.js";import"./RefreshableLayerView-BuI3IY7B.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
