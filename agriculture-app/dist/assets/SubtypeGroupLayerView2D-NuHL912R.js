import{v as a,x as n,y as d,P as u,bd as l}from"./index-Cd0FW8f7.js";import{r as g}from"./FeatureLayerView2D-BWdCHFqM.js";import"./Container-BNlrJGGw.js";import"./featureConversionUtils-Dyvn6aVN.js";import"./FeatureEffect-DMRH-2gt.js";import"./timeSupport-DgX4kfVf.js";import"./LayerView-BKCDQu8f.js";import"./layerViewUtils-DUccXJvk.js";import"./TechniqueInstance-DRLHKz3K.js";import"./UpdateTracking2D-CP6jItHZ.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-Y4qOkpci.js";import"./enums-CmIX1y88.js";import"./utils-Cb1C_sH_.js";import"./Rect-CUzevAry.js";import"./LabelMetric-D6fuTZXo.js";import"./Program-D0h5Nlhu.js";import"./BufferObject-EPFbQr6y.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-DjqGIwoo.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-DdnXbVYS.js";import"./vec42-CvwsItd0.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-B5mqcyqU.js";import"./WGLContainer-vjRBgyBm.js";import"./VertexArrayObject-C230UAkF.js";import"./ProgramTemplate-BTJ9Z8W3.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-Cv1h_sOt.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-Bi1Y7r2L.js";import"./labelingInfo-C8CtaHPW.js";import"./labelUtils-Cpmr1Qxm.js";import"./jsonUtils-CKC5k_Cc.js";import"./heatmapUtils-D7WaOPt-.js";import"./SDFHelper-DU3Bul2a.js";import"./floatRGBA-Co433Ng0.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-f6TbL5hK.js";import"./RefreshableLayerView-DhZ0etpm.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
