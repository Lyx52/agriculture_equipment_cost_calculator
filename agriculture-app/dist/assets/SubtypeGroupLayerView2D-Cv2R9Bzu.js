import{v as a,x as n,y as d,P as u,b2 as l}from"./index-XIO9fwxi.js";import{r as g}from"./FeatureLayerView2D-BcN0bMo-.js";import"./Container-CZ1l6m2E.js";import"./featureConversionUtils-C0wqW0QN.js";import"./FeatureEffect-C8rIqW2P.js";import"./timeSupport-AjqUkPr6.js";import"./LayerView-CLEnRmeo.js";import"./layerViewUtils-_ZBx6w_U.js";import"./TechniqueInstance-Dh3EjCVJ.js";import"./UpdateTracking2D-D7VU6-ua.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-DVBSfzKO.js";import"./enums-CmIX1y88.js";import"./utils-DlmqcFwv.js";import"./Rect-CUzevAry.js";import"./LabelMetric-DBWdpBTj.js";import"./Program-C17-02uQ.js";import"./BufferObject-DOzE6suC.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-q5AYaC8a.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-HKjFMrov.js";import"./vec42-CC9xzoLY.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-BFE8y-vG.js";import"./WGLContainer-QjyRGwpE.js";import"./VertexArrayObject-BLDVtmAn.js";import"./ProgramTemplate-C7SmjXg9.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-CI91VM0s.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-B0EQAwXo.js";import"./labelingInfo-CEW5XI-J.js";import"./labelUtils-Df7p8bMj.js";import"./jsonUtils-D0MzYENE.js";import"./heatmapUtils-B_kQB5ME.js";import"./SDFHelper-BhSeK_i8.js";import"./floatRGBA-C84UL_oM.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-Zwmup4sJ.js";import"./RefreshableLayerView-DUIKgWbe.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
