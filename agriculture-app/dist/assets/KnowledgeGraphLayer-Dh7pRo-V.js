import{dT as T,dX as _,dU as S,dV as D,dW as L,dY as v,V as f,y as k,ek as E,Z as A,s as b,el as u,em as C,n as g,cm as N,ed as $,eb as w,ee as G,al as I,v as n,w as h,bg as R,bL as O,d$ as U,x as F,dG as j,bk as P,e2 as x}from"./index-D7nePuNx.js";import{u as c,c as M,E as z,F as K,R as H}from"./KnowledgeGraphSublayer-Ch6FdOnL.js";import{l as V}from"./ArcGISService-Dr0_qOJ-.js";import{e as Y}from"./CustomParametersMixin-D1A5pkaJ.js";import{F as B}from"./knowledgeGraphService-DoN7-_Xu.js";import"./featureConversionUtils-DWLVqdTf.js";import"./GraphQueryStreaming-BQ7zvFVE.js";import"./UniqueValueRenderer-10qk438E.js";import"./ColorStop-BCSjeYOC.js";import"./diffUtils-C10qYGsV.js";import"./colorRamps-By8eNrDw.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-rrrW60FA.js";import"./jsonUtils-ywsAfq5H.js";import"./defaults-CK6xALPr.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-CEeMpcp0.js";import"./jsonUtils-DCzZRIAo.js";import"./LRUCache-CYyrh8S1.js";import"./FieldsIndex-DT-bUVbq.js";import"./UnknownTimeZone-C08bStb3.js";import"./OverrideHelper-B0keacv3.js";import"./colorUtils-CWastG9K.js";import"./vec42-By3YLjCA.js";import"./vec4f64-CMoMXWBi.js";import"./utils-BzgkALzR.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-DhFE0DXb.js";import"./heatmapUtils-C-PHgXDm.js";import"./FeatureStore-KSD_lTc0.js";import"./BoundsStore-DxWSn0Sq.js";import"./PooledRBush-1BkUCCni.js";import"./timeSupport-BHp9KorT.js";import"./optimizedFeatureQueryEngineAdapter-BSlAAg9V.js";import"./QueryEngine-B2DqKZkq.js";import"./WhereClause-CvrrX1ts.js";import"./TimeOnly-Dz71perL.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-CasPtcG5.js";import"./utils-aX5_LA-z.js";import"./utils-CZlE0Jx_.js";import"./ClassBreaksDefinition-Dzd7Vmoe.js";import"./clientSideDefaults-BidX8REn.js";import"./capabilities-Y9lFlGVh.js";import"./fieldProperties-DH2wEYwD.js";import"./FeatureEffectLayer-DuIbOACE.js";import"./FeatureEffect-CSZ1uAXt.js";import"./FeatureReductionLayer-DwXSXRV4.js";import"./FeatureReductionSelection-DkuqbNzY.js";import"./featureLayerUtils-CbHti6KJ.js";import"./labelingInfo-DZVxVspf.js";import"./labelUtils-DMelNDUU.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-CjzLtlZc.js";import"./OrderByInfo-DsFBjiLJ.js";import"./popupUtils-BO2kJLvQ.js";let o=class extends T(_(S(V(D(L(v(Y(x)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(f.ofType(c)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(f.ofType(c)),this.type="knowledge-graph",this.url=null,this.addHandles(k(()=>this.layers.concat(this.tables),(t,i)=>this._handleSublayersChange(t,i),E))}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){A(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),await M(this)}async _fetchMetadata(){if(!this.url)throw new b("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await B(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===u.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new z({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await K(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,C(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,a)=>{const s=this._graphTypeLookup.get(a);if(!s)return g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(a);s.type!=="relationship"&&s.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(a))});else if(!e.generateAllSublayers)throw new b("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var s,r;let e=[],t=[];const{inclusionModeDefinition:i}=this,a=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((s=this.knowledgeGraph.dataModel)==null?void 0:s.entityTypes)??[],t=((r=this.knowledgeGraph.dataModel)==null?void 0:r.relationshipTypes)??[]):a&&a.size>0&&a.forEach((p,l)=>{const d=this._graphTypeLookup.get(l);switch(d==null?void 0:d.type){case"relationship":t.push(d);break;case"entity":e.push(d)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(a=>{e(a)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const a=this._graphTypeLookup.get(i);a&&(this._addSublayer(a),a.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}await M(this,t),this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(a=>{const s=this._createSublayer(a);i(s)&&t.push(s),this._updateSublayerCaches(a)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new c({objectType:e,parentCompositeLayer:this,graphType:e.type})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const a=e.find(s=>s.type===i.graphType&&s.name===i.graphTypeName);a&&(i.objectType=a,this._updateSublayerCaches(a))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,a){e[t]="<pending>",i.pendingOperations.push(W(this.inclusionModeDefinition).then(s=>{const r=X(a);e[t]=r.itemRelativeUrl,i.toAdd.push({resource:r,content:{type:"blob",blob:s},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}_handleSublayersChange(e,t){t&&(t.forEach(i=>{i.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this}),e.on("after-remove",({item:i})=>{i.parent=null})],"sublayers-owner"))}readDefinitionSetMap(e,t,i){return N(e,i)}writeDefinitionSetMap(e,t,i,a){const s=a==null?void 0:a.portalItem,r=a==null?void 0:a.resources,p=$(a==null?void 0:a.origin);if(!s||!r||p==null)return void(e&&(t[i]=w(e,a)));const{inclusionModeDefinition:l}=this;if(!l||this._displaysAllRecords(l))return void(this.definitionSetMap=null);const d=this.originIdOf("inclusionModeDefinition");if(d===u.USER||this._namedTypesModified||p<d)this._saveUrlAsNewResource(t,i,r,s);else if(p===d&&e){const m=w(e,a);G(m)?this._saveUrlAsNewResource(t,i,r,s):t[i]=m}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===u.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===u.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((a,s)=>{var p;const r=I(this.sublayerIdsCache,s,()=>new Set);(p=a.members)==null||p.forEach(l=>{r.add(l.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,a,s,r,p,l,d,m;const t=[];for(const y of e)((s=(a=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:a.get(y.typeName))==null?void 0:s.useAllData)===!1&&((d=(l=(p=(r=this.dataManager.inclusionModeDefinition)==null?void 0:r.namedTypeDefinitions)==null?void 0:p.get(y.typeName))==null?void 0:l.members)!=null&&d.has(y.id))&&t.push(y);this.dataManager.removeFromLayer(t);for(const y of t)(m=this.sublayerIdsCache.get(y.typeName))==null||m.delete(y.id);return this._refreshNamedTypes(),t}};n([h()],o.prototype,"dataManager",void 0),n([h({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],o.prototype,"definitionSetMap",void 0),n([R("definitionSetMap")],o.prototype,"readDefinitionSetMap",null),n([O("definitionSetMap")],o.prototype,"writeDefinitionSetMap",null),n([h()],o.prototype,"inclusionModeDefinition",null),n([h()],o.prototype,"knowledgeGraph",void 0),n([h({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],o.prototype,"layers",void 0),n([h()],o.prototype,"memberEntityTypes",void 0),n([h()],o.prototype,"memberRelationshipTypes",void 0),n([h({type:["KnowledgeGraphLayer"]})],o.prototype,"operationalLayerType",void 0),n([h()],o.prototype,"sublayerIdsCache",void 0),n([h({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],o.prototype,"tables",void 0),n([h({json:{read:!1}})],o.prototype,"type",void 0),n([h(U)],o.prototype,"url",void 0),o=n([F("esri.layers.KnowledgeGraphLayer")],o);const Je=o;async function W(e){const t=await H(e);return new Blob([t],{type:"application/x-protobuf"})}function X(e){const t=`definitionSetMap-${j()}.dat`,i=P("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{Je as default};
