import{v as a,x as n,y as d,P as u,b2 as l}from"./index-DtjrQhoN.js";import{r as g}from"./FeatureLayerView2D-D_PfhdmN.js";import"./Container-BTSZqYhj.js";import"./featureConversionUtils-B2dLklRN.js";import"./FeatureEffect-Cq8B-hVt.js";import"./timeSupport-C5LX36CB.js";import"./LayerView-Cbsvl-KT.js";import"./layerViewUtils-CyHhUe5R.js";import"./TechniqueInstance-cC1iSm4X.js";import"./UpdateTracking2D-xjWh1zX3.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-oCM9Axob.js";import"./enums-CmIX1y88.js";import"./utils-DAoXJGRn.js";import"./Rect-CUzevAry.js";import"./LabelMetric-BoIg7thA.js";import"./Program-DDiZ9c7t.js";import"./BufferObject-B64IoSQq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Db-6xiEm.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-CdqR9exZ.js";import"./vec42-Biwhfbwm.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-BOX7DL4s.js";import"./WGLContainer-BnScSyS2.js";import"./VertexArrayObject-BrBvTPO_.js";import"./ProgramTemplate-D_E6DDVP.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BimHa3ZJ.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-DAZ8-MMR.js";import"./labelingInfo-EHDlgL5a.js";import"./labelUtils-TdKJCpe1.js";import"./jsonUtils-BXfjv86w.js";import"./heatmapUtils-Bono1Mvk.js";import"./SDFHelper-CreBKbZg.js";import"./floatRGBA-fCAI-Df5.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-BB6-rIG_.js";import"./RefreshableLayerView-ypqRX2ql.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
