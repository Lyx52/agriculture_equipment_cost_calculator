import{v as a,x as n,y as d,P as u,bd as l}from"./index-CbmY42Ye.js";import{r as g}from"./FeatureLayerView2D-DLMWSazL.js";import"./Container-Cm9BfwET.js";import"./featureConversionUtils-CmDAHTI8.js";import"./FeatureEffect-alnD1KZm.js";import"./timeSupport-Ol_2qKPR.js";import"./LayerView-WdUOpC2D.js";import"./layerViewUtils-BQ8HX1-w.js";import"./TechniqueInstance-DlCkur-W.js";import"./UpdateTracking2D-DJrJZS87.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-8Ky2pX7p.js";import"./enums-CmIX1y88.js";import"./utils-CSDu97vy.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Ba9yFb0c.js";import"./Program-D8CY6udR.js";import"./BufferObject-CJFNrg-9.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Dc8xBz90.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-B2gIu73U.js";import"./vec42-BgT5n3C0.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-C4SlWxzz.js";import"./WGLContainer-Gd4bTkL0.js";import"./VertexArrayObject-D-lSXEAN.js";import"./ProgramTemplate-C_M6n5vr.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-Dgb_C9En.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-UitkYCH0.js";import"./labelingInfo-mn5WQz6n.js";import"./labelUtils-DAC3pfuC.js";import"./jsonUtils-6d1ciWhH.js";import"./heatmapUtils-Bq25Iq1h.js";import"./SDFHelper-DBWmtbZu.js";import"./floatRGBA-BRGBiXvz.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-DIMJar1B.js";import"./RefreshableLayerView-B3k7J3q7.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
