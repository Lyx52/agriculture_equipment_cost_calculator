import{v as a,x as n,y as d,P as u,b2 as l}from"./index-Ca6X6SJU.js";import{r as g}from"./FeatureLayerView2D-DqBm5MmR.js";import"./Container-reZAA44N.js";import"./featureConversionUtils-Bq0n-SSN.js";import"./FeatureEffect-g0pJXnNX.js";import"./timeSupport-Dk8T_Pkt.js";import"./LayerView-DQVQpq5b.js";import"./layerViewUtils-AP99xC1e.js";import"./TechniqueInstance-Cry3maPq.js";import"./UpdateTracking2D-Cpkaiucx.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-BqlXeik3.js";import"./enums-CmIX1y88.js";import"./utils-DhDgF2gQ.js";import"./Rect-CUzevAry.js";import"./LabelMetric-BsUKsEiU.js";import"./Program-4-1dA5Oq.js";import"./BufferObject-PHWezk7N.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-I7Ufnjj8.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-Bl6tSxEz.js";import"./vec42-2JCQ4qjo.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Ds3Gm6yU.js";import"./WGLContainer-CLuRgSOR.js";import"./VertexArrayObject-BeM5oubZ.js";import"./ProgramTemplate-dZU5qqj2.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-t1nxl-fk.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-nO4fuepX.js";import"./labelingInfo-C6wRAOTO.js";import"./labelUtils-w2wElY7E.js";import"./jsonUtils-CKaM3ITf.js";import"./heatmapUtils-BiCFNUnY.js";import"./SDFHelper-BDmDGcXI.js";import"./floatRGBA-DwdV7sfp.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-CeDCIqyd.js";import"./RefreshableLayerView-C3hzgUM_.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
