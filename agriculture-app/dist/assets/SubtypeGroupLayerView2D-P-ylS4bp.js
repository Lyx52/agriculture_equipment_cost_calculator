import{v as a,x as n,y as d,P as u,bd as l}from"./index-BXE8oid4.js";import{r as g}from"./FeatureLayerView2D-BPzzF1Am.js";import"./Container-DPxfccU3.js";import"./featureConversionUtils-DRY0a2aV.js";import"./FeatureEffect-CvfAY3UN.js";import"./timeSupport-CGV5F7_f.js";import"./LayerView-3UmZPAuJ.js";import"./layerViewUtils-CkgNQV_H.js";import"./TechniqueInstance-BalDLaOw.js";import"./UpdateTracking2D-D6h3JfgG.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-B7P2Jypl.js";import"./enums-CmIX1y88.js";import"./utils-CDg7PYOU.js";import"./Rect-CUzevAry.js";import"./LabelMetric-xJSPvvnS.js";import"./Program-CpX4YDBO.js";import"./BufferObject-lKFs5noq.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-CIZ6UJ1Y.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-NACTaPfN.js";import"./vec42-NWfxkSZi.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-C72kCl6Y.js";import"./WGLContainer--cmnwWaq.js";import"./VertexArrayObject-D7J2Priw.js";import"./ProgramTemplate-Cw6e6LtF.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-D-KM-6ep.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-BTuQ6VuI.js";import"./labelingInfo-Dc-02mKL.js";import"./labelUtils-BGZ3-vWf.js";import"./jsonUtils-CCS7Zubg.js";import"./heatmapUtils-BcCw-_lK.js";import"./SDFHelper-BRpRQZhh.js";import"./floatRGBA-BkRBG5yj.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-Dc_UkQ6X.js";import"./RefreshableLayerView-DDST9rmk.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
