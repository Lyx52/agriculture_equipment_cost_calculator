import{v as a,x as n,y as d,P as u,bd as l}from"./index-B1r_tx_U.js";import{r as g}from"./FeatureLayerView2D-C_p6UADQ.js";import"./Container-CyDa1xvQ.js";import"./featureConversionUtils-DhWnSmV3.js";import"./FeatureEffect-B2-_bP5J.js";import"./timeSupport-y4BAHIM_.js";import"./LayerView-CcR7IO0j.js";import"./layerViewUtils-DacfvDRC.js";import"./TechniqueInstance-BIIQF8Ba.js";import"./UpdateTracking2D-sg10Ibzz.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-oHfaTfMy.js";import"./enums-CmIX1y88.js";import"./utils-C9H-KH74.js";import"./Rect-CUzevAry.js";import"./LabelMetric-D-MrEc_o.js";import"./Program-vHnAND8y.js";import"./BufferObject-BXfZb82R.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-CMw2CGMY.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-Cts9VRCw.js";import"./vec42-DwDz26pO.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-D4zbrkCz.js";import"./WGLContainer-CT4p_1Js.js";import"./VertexArrayObject-DBRJVjPj.js";import"./ProgramTemplate-DQW_1SHG.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-DmHVi3eo.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-DvBH9UTW.js";import"./labelingInfo-g8l2nDwY.js";import"./labelUtils-B4NMu-mk.js";import"./jsonUtils-C0REiInq.js";import"./heatmapUtils-CCaPno4L.js";import"./SDFHelper-DQ2mKiHf.js";import"./floatRGBA-BRn725I1.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-CPbZA0sy.js";import"./RefreshableLayerView-BMSD5q95.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
