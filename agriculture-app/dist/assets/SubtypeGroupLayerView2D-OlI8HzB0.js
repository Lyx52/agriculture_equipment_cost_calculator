import{v as a,x as n,y as d,P as u,bd as l}from"./index-BgXBj-Oy.js";import{r as g}from"./FeatureLayerView2D-BzEhMVne.js";import"./Container-wU9ervKo.js";import"./featureConversionUtils-C6Ley5oI.js";import"./FeatureEffect-DncuRGnV.js";import"./timeSupport-bOA1XVAr.js";import"./LayerView-DnACTRCo.js";import"./layerViewUtils-B959MRRO.js";import"./TechniqueInstance-ipKVjoif.js";import"./UpdateTracking2D-oKZjgfCe.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-BJ5FGhCK.js";import"./enums-CmIX1y88.js";import"./utils-BFE_I8UD.js";import"./Rect-CUzevAry.js";import"./LabelMetric-gF1wlYF7.js";import"./Program-DwuO9mO_.js";import"./BufferObject-aPC0jz0v.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./defaults-Db_BxQHD.js";import"./defaultsJSON-GKolV7NZ.js";import"./BindType-BmZEZMMh.js";import"./Util-BWgsgBGp.js";import"./vec42-3yZmKf0C.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-DHMXaI1p.js";import"./WGLContainer-CMKuZAZH.js";import"./VertexArrayObject-DCre1SRk.js";import"./ProgramTemplate-Bo3_jgHS.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-zu3vt-PY.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-Ddsb7r2x.js";import"./labelingInfo-CVMDkMTV.js";import"./labelUtils-D2ZsBAwN.js";import"./jsonUtils-bm8GLKUK.js";import"./heatmapUtils-DuU1uqGh.js";import"./SDFHelper-Z_Ypfomm.js";import"./floatRGBA-BtJtdTNE.js";import"./HighlightCounter-Czi-fdpx.js";import"./popupUtils-ClC0BnFh.js";import"./RefreshableLayerView-C1qC9ByX.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(s=>s.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=a([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
