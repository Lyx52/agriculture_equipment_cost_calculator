import{W as p,s as m,ax as s}from"./index-vwFCrh65.js";import{p as n}from"./MeshVertexAttributes-0AQauWgi.js";import{B as a}from"./vertexSpaceConversion-DHFK8-p3.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./spatialReferenceEllipsoidUtils-DPBa4lsk.js";import"./computeTranslationToOriginAndRotation-CJ1jhDBY.js";import"./projectPointToVector-BX2eLrec.js";import"./meshVertexSpaceUtils-DJLPmETC.js";import"./MeshLocalVertexSpace-5d0GhGPq.js";import"./vec3-E--sf8xh.js";import"./BufferView-BhUziWuX.js";import"./vec42-Cs73bLm9.js";import"./vec4-aKB4NIb5.js";async function M(t,o,r){await Promise.resolve(),p(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),o);return i.transform=null,i}export{M as convertMeshVertexSpace};
